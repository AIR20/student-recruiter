-- MySQL Script generated by MySQL Workbench
-- Wed Apr  1 14:27:44 2015
-- Model: New Model    Version: 1.0
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema srs
-- -----------------------------------------------------

USE u3mk ;

-- -----------------------------------------------------
-- Table `users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `users` ;

CREATE TABLE IF NOT EXISTS `users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(90) NOT NULL,
  `hashed_password` VARCHAR(90) NOT NULL,
  `role` INTEGER NOT NULL,
  `firstname` VARCHAR(45) NOT NULL,
  `lastname` VARCHAR(45) NOT NULL,
  `gender` TINYINT NULL,
  `dob` DATE NULL,
  `avatar` VARCHAR(180) NULL,
  `registered_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `users` (`email` ASC);

CREATE INDEX `users_email_idx` ON `users` (`email` ASC);



-- -----------------------------------------------------
-- Table `schools`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `schools` ;

CREATE TABLE IF NOT EXISTS `schools` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(90) NOT NULL,
  `school_type` VARCHAR(45) NULL,
  `address_line1` VARCHAR(90) NULL,
  `address_line2` VARCHAR(90) NULL,
  `address_line3` VARCHAR(90) NULL,
  `postcode` VARCHAR(45) NULL,
  `tel` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `teachers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `teachers` ;

CREATE TABLE IF NOT EXISTS `teachers` (
  `user_id` INT(11) NOT NULL,
  `school_id` INT(11) NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_teachers_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_teachers_school_id`
    FOREIGN KEY (`school_id`)
    REFERENCES `schools` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_teachers_school_id_idx` ON `teachers` (`school_id` ASC);


-- -----------------------------------------------------
-- Table `students`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `students` ;

CREATE TABLE IF NOT EXISTS `students` (
  `user_id` INT(11) NOT NULL,
  `school_id` INT(11) NULL,
  `teacher_id` INT(11) NULL,
  `address_line1` VARCHAR(90) NULL,
  `address_line2` VARCHAR(90) NULL,
  `address_line3` VARCHAR(90) NULL,
  `postcode` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_students_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_students_school_id`
    FOREIGN KEY (`school_id`)
    REFERENCES `schools` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_students_teacher_id`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `teachers` (`user_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_students_school_id_idx` ON `students` (`school_id` ASC);

CREATE INDEX `fk_students_teacher_id_idx` ON `students` (`teacher_id` ASC);


-- -----------------------------------------------------
-- Table `buildings`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `buildings` ;

CREATE TABLE IF NOT EXISTS `buildings` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `map_no` INT(11) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `departments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `departments` ;

CREATE TABLE IF NOT EXISTS `departments` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(90) NOT NULL,
  `building_id` INT(11) NULL,
  `address_line1` VARCHAR(90) NULL,
  `address_line2` VARCHAR(90) NULL,
  `address_line3` VARCHAR(90) NULL,
  `postcode` VARCHAR(45) NULL,
  `tel` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_departments_building_id`
    FOREIGN KEY (`building_id`)
    REFERENCES `buildings` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_departments_building_id_idx` ON `departments` (`building_id` ASC);


-- -----------------------------------------------------
-- Table `staff`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `staff` ;

CREATE TABLE IF NOT EXISTS `staff` (
  `user_id` INT(11) NOT NULL,
  `department_id` INT(11) NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_staff_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_staff_department_id`
    FOREIGN KEY (`department_id`)
    REFERENCES `departments` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_staff_department_id_idx` ON `staff` (`department_id` ASC);


-- -----------------------------------------------------
-- Table `admins`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `admins` ;

CREATE TABLE IF NOT EXISTS `admins` (
  `user_id` INT(11) NOT NULL,
  `phone` VARCHAR(45) NULL,
  PRIMARY KEY (`user_id`),
  CONSTRAINT `fk_admins_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `users` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `rooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `rooms` ;

CREATE TABLE IF NOT EXISTS `rooms` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `room_name` VARCHAR(45) NOT NULL,
  `room_no` VARCHAR(45) NULL,
  `building_id` INT(11) NULL,
  `size` INT(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_rooms_building_id`
    FOREIGN KEY (`building_id`)
    REFERENCES `buildings` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_rooms_building_id_idx` ON `rooms` (`building_id` ASC);


-- -----------------------------------------------------
-- Table `events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `events` ;

CREATE TABLE IF NOT EXISTS `events` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(180) NOT NULL,
  `description` TEXT NOT NULL,
  `tags` VARCHAR(180) NULL,
  `room_id` INT(11) NULL,
  `start_time` DATETIME NULL,
  `end_time` DATETIME NULL,
  `proposed_at` DATETIME NOT NULL ,
  `proposed_by` INT(11) NULL,
  `approved_at` DATETIME NULL,
  `approved_by` INT(11) NULL,
  `status` VARCHAR(45) NULL DEFAULT 'pending',
  `applicants` INT(11) NOT NULL DEFAULT 0,
  `facebook_link` VARCHAR(180) NULL,
  `twitter_link` VARCHAR(180) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_events_room_id`
    FOREIGN KEY (`room_id`)
    REFERENCES `rooms` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_events_proposed_by`
    FOREIGN KEY (`proposed_by`)
    REFERENCES `staff` (`user_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_events_approved_by`
    FOREIGN KEY (`approved_by`)
    REFERENCES `admins` (`user_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_events_room_id_idx` ON `events` (`room_id` ASC);

CREATE INDEX `fk_events_approved_by_idx` ON `events` (`approved_by` ASC);

CREATE INDEX `events_start_time_idx` ON `events` (`start_time` ASC);

CREATE INDEX `events_proposed_at_idx` ON `events` (`approved_at` ASC);

CREATE INDEX `fk_events_proposed_by_idx` ON `events` (`proposed_by` ASC);


-- -----------------------------------------------------
-- Table `applications`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `applications` ;

CREATE TABLE IF NOT EXISTS `applications` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `student_id` INT(11) NULL,
  `event_id` INT(11) NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'reserved',
  `created_at` DATETIME NOT NULL ,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_applications_student_id`
    FOREIGN KEY (`student_id`)
    REFERENCES `students` (`user_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_applications_event_id`
    FOREIGN KEY (`event_id`)
    REFERENCES `events` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;

CREATE INDEX `fk_applications_student_id_idx` ON `applications` (`student_id` ASC);

CREATE INDEX `fk_applications_event_id_idx` ON `applications` (`event_id` ASC);


-- -----------------------------------------------------
-- Table `feedbacks`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `feedbacks` ;

CREATE TABLE IF NOT EXISTS `feedbacks` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `student_id` INT(11) NULL,
  `comment` TEXT NULL,
  `submit_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_feedbacks_student_id`
    FOREIGN KEY (`student_id`)
    REFERENCES `students` (`user_id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE INDEX `fk_feedbacks_student_id_idx` ON `feedbacks` (`student_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
